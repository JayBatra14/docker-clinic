{"version":3,"sources":["services/PatientService.js","components/ListPatientComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreatePatientComponent.jsx","components/ViewPatientComponent.jsx","components/FilterPatientComponent.jsx","App.js","index.js"],"names":["PATIENT_API_BASE_URL","patient","axios","post","patientId","put","get","name","mobileNumber","delete","ListPatientComponent","props","changeNameHandler","event","setState","target","value","changeMobileNumberHandler","state","id","match","params","patients","addPatient","bind","editPatient","deletePatient","viewPatient","findPatientsByName","findPatientsByMobileNumber","PatientService","then","res","filter","this","history","push","getPatients","data","className","role","type","onChange","placeholder","aria-label","onClick","map","key","age","style","marginLeft","Component","HeaderComponent","FooterComponent","CreatePatientComponent","saveOrUpdatePatient","e","preventDefault","address","visits","disease","medicines","length","alert","createPatient","updatePatient","changeAgeHandler","changeAddressHandler","changeDiseaseHandler","changeMedicinesHandler","getPatientById","getTitle","required","htmlFor","rows","cancel","ViewPatientComponent","visit","visitingId","aria-current","date","FilterPatientComponent","includes","substring","getPatientsByName","getPatientsByMobileNumber","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f598998.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst PATIENT_API_BASE_URL = \"http://localhost:4000/patients/\";\r\n\r\nclass PatientService {\r\n\r\n    createPatient(patient){\r\n        return axios.post(PATIENT_API_BASE_URL, patient);\r\n    }\r\n\r\n    updatePatient(patient, patientId){\r\n        return axios.put(PATIENT_API_BASE_URL + patientId, patient);\r\n    }\r\n\r\n    getPatientById(patientId){\r\n        return axios.get(PATIENT_API_BASE_URL + patientId);\r\n    }\r\n\r\n    getPatients(){\r\n        return axios.get(PATIENT_API_BASE_URL);\r\n    }\r\n\r\n    getPatientsByName(name){\r\n        return axios.get(PATIENT_API_BASE_URL + 'byName/' + name);\r\n    }\r\n\r\n    getPatientsByMobileNumber(mobileNumber){\r\n        return axios.get(PATIENT_API_BASE_URL + 'byMobileNumber/' + mobileNumber);\r\n    }\r\n\r\n    deletePatient(patientId){\r\n        return axios.delete(PATIENT_API_BASE_URL + patientId);\r\n    }\r\n}\r\n\r\nexport default new PatientService();","import React, { Component } from 'react'\r\nimport PatientService from '../services/PatientService'\r\n\r\nclass ListPatientComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            mobileNumber: '',\r\n            patients: []\r\n        }\r\n        this.addPatient = this.addPatient.bind(this);\r\n        this.editPatient = this.editPatient.bind(this);\r\n        this.deletePatient = this.deletePatient.bind(this);\r\n        this.viewPatient = this.viewPatient.bind(this);\r\n        this.findPatientsByName = this.findPatientsByName.bind(this);\r\n        this.findPatientsByMobileNumber = this.findPatientsByMobileNumber.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeMobileNumberHandler = this.changeMobileNumberHandler.bind(this);\r\n    }\r\n\r\n    deletePatient(id) {\r\n        PatientService.deletePatient(id).then(res => {\r\n            this.setState({ patients: this.state.patients.filter(patient => patient.id !== id) });\r\n        });\r\n    }\r\n    viewPatient(id) {\r\n        this.props.history.push(`/view-patient/${id}`);\r\n    }\r\n    editPatient(id) {\r\n        this.props.history.push(`/add-patient/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        PatientService.getPatients().then((res) => {\r\n            this.setState({ patients: res.data });\r\n        });\r\n    }\r\n\r\n    addPatient() {\r\n        this.props.history.push('/add-patient/_add');\r\n    }\r\n\r\n    findPatientsByName(name) {\r\n        this.props.history.push(`/find/byName${name}`);\r\n    }\r\n\r\n    findPatientsByMobileNumber(mobileNumber) {\r\n        this.props.history.push(`/find/byMobileNumber${mobileNumber}`);\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    changeMobileNumberHandler = (event) => {\r\n        this.setState({ mobileNumber: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md bg-light my-3\">\r\n                    <h1 className=\"navbar-brand text-success text-uppercase\">Patient Management App</h1>\r\n                    <div className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" id=\"patientName\" value={this.state.name} onChange={this.changeNameHandler} placeholder=\"Search By Name\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\" onClick={() => this.findPatientsByName(this.state.name)}>Name</button>\r\n                        <input className=\"form-control me-2 ml-3\" type=\"search\" id=\"patientMobileNumber\" value={this.state.mobileNumber} onChange={this.changeMobileNumberHandler} placeholder=\"Search By Number\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\" onClick={() => this.findPatientsByMobileNumber(this.state.mobileNumber)}>Number</button>\r\n                    </div>\r\n                    <button className=\"btn btn-success text-uppercase ml-4\" onClick={this.addPatient}> Add Patient</button>\r\n                </nav>\r\n                \r\n                <h1 className=\"text-center text-success text-uppercase mb-3\">Patients List</h1>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered text-center\">\r\n                        <thead className=\"text-uppercase text-light bg-success\">\r\n                            <tr>\r\n                                <th> Patient Name</th>\r\n                                <th> Patient Age</th>\r\n                                <th> Patient Mobile Number</th>\r\n                                <th> Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.patients.map(\r\n                                    patient =>\r\n                                        <tr key={patient.id}>\r\n                                            <td> {patient.name} </td>\r\n                                            <td> {patient.age}</td>\r\n                                            <td> {patient.mobileNumber}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.editPatient(patient.id)} className=\"btn btn-info\">Update </button>\r\n                                                <button style={{ marginLeft: \"10px\" }} onClick={() => this.deletePatient(patient.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                <button style={{ marginLeft: \"10px\" }} onClick={() => this.viewPatient(patient.id)} className=\"btn btn-warning\">View </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListPatientComponent\r\n\r\n/*\r\n{\r\n    \"age\": \"14.5\",\r\n    \"name\": \"patient1\",\r\n    \"address\": \"address1\",\r\n    \"mobileNumber\": \"mobile5678\",\r\n    \"visits\": [\r\n        {\r\n            \"disease\": \"disease1\",\r\n            \"medicines\": \"medicines1\"\r\n        }\r\n    ]\r\n}\r\n*/","import React, { Component } from 'react'\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-light mb-4\">\r\n                    <h1 className=\"text-success text-center text-uppercase mx-auto\">Relief Homeopathic Clinic</h1>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react'\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container text-center my-3\">\r\n                <footer className = \"footer\">\r\n                    <span className=\"text-success\">All Rights Reserved 2022 @JayBatra</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent","import React, { Component } from 'react'\r\nimport PatientService from '../services/PatientService';\r\n\r\nclass CreatePatientComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            age: '',\r\n            mobileNumber: '',\r\n            address: '',\r\n            disease: '',\r\n            medicines: ''\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAgeHandler = this.changeAgeHandler.bind(this);\r\n        this.changeMobileNumberHandler = this.changeMobileNumberHandler.bind(this);\r\n        this.changeAddressHandler = this.changeAddressHandler.bind(this);\r\n        this.changeDiseaseHandler = this.changeDiseaseHandler.bind(this);\r\n        this.changeMedicinesHandler = this.changeMedicinesHandler.bind(this);\r\n        this.saveOrUpdatePatient = this.saveOrUpdatePatient.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    // step 3\r\n    componentDidMount() {\r\n\r\n        // step 4\r\n        if (this.state.id === '_add') {\r\n            return\r\n        } else {\r\n            PatientService.getPatientById(this.state.id).then((res) => {\r\n                let patient = res.data;\r\n                let visits = patient.visits\r\n                this.setState({\r\n                    name: patient.name,\r\n                    age: patient.age,\r\n                    mobileNumber: patient.mobileNumber,\r\n                    address: patient.address,\r\n                    disease: visits[visits.length-1].disease,\r\n                    medicines: visits[visits.length-1].medicines\r\n                });\r\n            });\r\n        }\r\n    }\r\n    saveOrUpdatePatient = (e) => {\r\n        e.preventDefault();\r\n        let patient = {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            mobileNumber: this.state.mobileNumber,\r\n            address: this.state.address,\r\n            visits: [\r\n                {\r\n                    disease: this.state.disease,\r\n                    medicines: this.state.medicines\r\n                }\r\n            ]\r\n        };\r\n        // console.log('patient => ' + JSON.stringify(patient));\r\n        if(patient.mobileNumber && patient.mobileNumber.length!==10){\r\n            alert(\"Invalid Mobile Number\")\r\n        }\r\n        else if(patient.name && patient.age && patient.mobileNumber && patient.address && patient.visits[0].disease && patient.visits[0].medicines){\r\n            // step 5\r\n            if (this.state.id === '_add') {\r\n                PatientService.createPatient(patient).then(res => {\r\n                    this.props.history.push('/patients');\r\n                });\r\n            } else {\r\n                PatientService.updatePatient(patient, this.state.id).then(res => {\r\n                    this.props.history.push('/patients');\r\n                });\r\n            }\r\n        } else{\r\n            alert(\"Please fill all the fields\")\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    changeAgeHandler = (event) => {\r\n        this.setState({ age: event.target.value });\r\n    }\r\n\r\n    changeMobileNumberHandler = (event) => {\r\n        this.setState({ mobileNumber: event.target.value });\r\n    }\r\n\r\n    changeAddressHandler = (event) => {\r\n        this.setState({ address: event.target.value });\r\n    }\r\n\r\n    changeDiseaseHandler = (event) => {\r\n        this.setState({ disease: event.target.value });\r\n    }\r\n\r\n    changeMedicinesHandler = (event) => {\r\n        this.setState({ medicines: event.target.value });\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/patients');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === '_add') {\r\n            return <h3 className=\"text-center\">Add Patient</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Patient</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 text-success\">\r\n                            <div className=\"mt-3 text-uppercase\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label> Name: </label>\r\n                                            <input placeholder=\"Name\" name=\"name\" className=\"form-control\"\r\n                                                value={this.state.name} onChange={this.changeNameHandler} required />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label> Age: </label>\r\n                                            <input placeholder=\"Age\" name=\"age\" className=\"form-control\"\r\n                                                value={this.state.age} onChange={this.changeAgeHandler} required />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label> Mobile Number: </label>\r\n                                            <input placeholder=\"Mobile Number\" name=\"mobileNumber\" className=\"form-control\"\r\n                                                value={this.state.mobileNumber} onChange={this.changeMobileNumberHandler} required />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label> Address: </label>\r\n                                            <input placeholder=\"Address\" name=\"address\" className=\"form-control\"\r\n                                                value={this.state.address} onChange={this.changeAddressHandler} required />\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"disease\" className=\"form-label\"> Disease: </label>\r\n                                            <textarea className=\"form-control\" id=\"disease\" name=\"disease\" rows=\"3\" value={this.state.disease} onChange={this.changeDiseaseHandler} required></textarea>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"medicines\" className=\"form-label\"> Medicines: </label>\r\n                                            <textarea className=\"form-control\" id=\"medicines\" name=\"medicines\" rows=\"3\" value={this.state.medicines} onChange={this.changeMedicinesHandler} required></textarea>\r\n                                        </div>\r\n                                        \r\n                                        <button className=\"btn btn-success btn-lg\" type=\"submit\" onClick={this.saveOrUpdatePatient}>Save</button>\r\n                                        <button className=\"btn btn-danger btn-lg\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                        \r\n                                        \r\n                                       \r\n                                        </form>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePatientComponent","import React, { Component } from 'react'\r\nimport PatientService from '../services/PatientService'\r\n\r\nclass ViewPatientComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            patient: {\r\n                visits: [\r\n\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        PatientService.getPatientById(this.state.id).then(res => {\r\n            this.setState({ patient: res.data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h1 className=\"text-center my-3 display-5 fw-bold text-uppercase text-success\"> Patient Details</h1>\r\n                <hr/>\r\n                <div className=\"px-4 py-3 text-center\">\r\n                    <h2 className=\"d-block mx-auto mb-4 text-primary\">{\"PATIENT ID : \" + this.state.patient.id}</h2>\r\n                    <div className=\"card text-center mx-auto bg-primary rounded\">\r\n                        <div className=\"card-body text-light\">\r\n                            <h3 className=\"display-5 mb-4\">{\"NAME : \" + this.state.patient.name}</h3>\r\n                            <h3 className=\"display-5 mb-4\">{\"AGE : \" + this.state.patient.age}</h3>\r\n                            <h3 className=\"display-5 mb-4\">{\"MOBILE NUMBER : \" + this.state.patient.mobileNumber}</h3>\r\n                            <h3 className=\"display-5\">{\"ADDRESS : \" + this.state.patient.address}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <hr/>\r\n                <h1 className=\"text-center display-5 fw-bold text-uppercase text-success\">Visiting History</h1>\r\n                {\r\n                    this.state.patient.visits.map(\r\n                        visit =>\r\n                            <div className=\"list-group\" key={visit.visitingId}>\r\n                                <div className=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                                    <div className=\"d-flex w-100 justify-content-between\">\r\n                                        <h5 className=\"mb-1\">DISEASE</h5>\r\n                                        <h6 className=\"fw-bold\">{visit.date}</h6>\r\n                                    </div>\r\n                                    <p className=\"mb-1\">{visit.disease}</p>\r\n                                    <div className=\"d-flex w-100 justify-content-between\">\r\n                                        <h5 className=\"mb-1\">MEDICINES</h5>\r\n                                    </div>\r\n                                    <p className=\"mb-1\">{visit.medicines}</p>\r\n                                </div>\r\n                            </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewPatientComponent","import React, { Component } from 'react'\r\nimport PatientService from '../services/PatientService'\r\n\r\nclass FilterPatientComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filter: this.props.match.params.filter,\r\n            patients: []\r\n        }\r\n        this.editPatient = this.editPatient.bind(this);\r\n        this.deletePatient = this.deletePatient.bind(this);\r\n        this.viewPatient = this.viewPatient.bind(this);\r\n\r\n    }\r\n\r\n    deletePatient(id) {\r\n        PatientService.deletePatient(id).then(res => {\r\n            this.setState({ patients: this.state.patients.filter(patient => patient.id !== id) });\r\n        });\r\n    }\r\n\r\n    viewPatient(id) {\r\n        this.props.history.push(`/view-patient/${id}`);\r\n    }\r\n\r\n    editPatient(id) {\r\n        this.props.history.push(`/add-patient/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.filter.includes(\"byName\")) {\r\n            let name = this.state.filter.substring(6);\r\n            PatientService.getPatientsByName(name).then((res) => {\r\n                this.setState({ patients: res.data });\r\n            });\r\n        }\r\n        else {\r\n            let mobileNumber = this.state.filter.substring(14);\r\n            PatientService.getPatientsByMobileNumber(mobileNumber).then((res) => {\r\n                this.setState({ patients: res.data });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.patients.length === 0) {\r\n            return (\r\n                <h2 className=\"text-center mb-4 text-uppercase text-danger\">Patient does not exists</h2>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1 className=\"text-center text-success mb-4 text-uppercase\">Patients Lists</h1>\r\n\r\n                    <br></br>\r\n                    <div className=\"row\">\r\n                        <table className=\"table table-striped table-bordered text-center\">\r\n\r\n                            <thead className=\"text-uppercase\">\r\n                                <tr>\r\n                                    <th> Patient Name</th>\r\n                                    <th> Patient Age</th>\r\n                                    <th> Patient Mobile Number</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.patients.map(\r\n                                        patient =>\r\n                                            <tr key={patient.id}>\r\n                                                <td> {patient.name} </td>\r\n                                                <td> {patient.age}</td>\r\n                                                <td> {patient.mobileNumber}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => this.editPatient(patient.id)} className=\"btn btn-info\">Update </button>\r\n                                                    <button style={{ marginLeft: \"10px\" }} onClick={() => this.deletePatient(patient.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                    <button style={{ marginLeft: \"10px\" }} onClick={() => this.viewPatient(patient.id)} className=\"btn btn-warning\">View </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default FilterPatientComponent\r\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListPatientComponent from './components/ListPatientComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreatePatientComponent from './components/CreatePatientComponent';\nimport ViewPatientComponent from './components/ViewPatientComponent';\nimport FilterPatientComponent from './components/FilterPatientComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component = {ListPatientComponent}></Route>\n                          <Route path = \"/patients\" component = {ListPatientComponent}></Route>\n                          <Route path = \"/find/:filter\" component = {FilterPatientComponent}></Route>\n                          <Route path = \"/add-patient/:id\" component = {CreatePatientComponent}></Route>\n                          <Route path = \"/view-patient/:id\" component = {ViewPatientComponent}></Route>\n                          {/* <Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */}\n                    </Switch>\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}